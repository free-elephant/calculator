<!DOCTYPE html>
<html>
<head>
<title><%= title %></title>

<link rel='stylesheet' href='/stylesheets/style.css' />
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>

<link href="https://fonts.googleapis.com/css?family=Jua&display=swap" rel="stylesheet">

<script src="/javascripts/javasc.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<script type="text/javascript">


   //정리

  $(document).on("click",'.cal', function(){
      // var old_input=$("#Equation") 왜 이거는 안되었을까????????? 어떤 차이가 있는 걸까?
      var old_input= document.getElementById('Equation');
      var old_input_value=old_input.value; //value와 val() 차이는?
      var selectPos = old_input.selectionStart; //커서 위치
      var beforeTxt = old_input_value.substring(0, selectPos);  // 기존텍스트 ~ 커서시작점 까지의 문자
      var afterTxt = old_input_value.substring(old_input.selectionEnd, old_input_value.length);

      var new_input=$(this).val();

      if(old_input=="" ) { //기존에 아무것도 없는 상황에서
          if ((new_input === "*" || new_input === "/")) { // 곱셈 나눗셈은 불가능하다고 예외처리
              alert("곱셈 또는 나눗셈으로 시작할 수 없습니다.");
              new_input='';
          }
      }
      sumtxt=beforeTxt+ new_input+afterTxt
      $("#Equation").val(beforeTxt+ new_input+afterTxt);
      $('#Function_description').val("사칙연산의 우선순위는 (괄호)>*>/>+/-로 진행됩니다.")
  });

   // var if_function=0
   $(document).on("click",'#if', function(){
       $('#Equation').val($(this).val());
       var split = $(this).val();
       $('#Function_description').val("IF[비교값,참,거젓] 조건값을 구하는 함수입니다.")
       // if_function=2;

   });


  $(document).on("click",'.equals', function(value) {
      // var a = $('#answer').val(); //함수를 이용하여 계산 -> 이 함수를 이용한 것과 후위계산법의 차이는?
      // $('#answer').val(eval(a));
      var arr= new Array();
      var ans = $('#Equation').val();
      arr=ans.split("") // 배열로 만들기


      //예외처리를 위한 변수 만들기
      var exception1 = 0;
      var exception2 = 0;
      var exception3 = 0;
      var exception4 = 0;
      var exception_nan_num = 2;
      var exception_equal = 0;
      var nan_equal=0;
      var nan_num = 0;

      var add=new Array(); //예외처리를 미리 해주는 배열 만들기

      // console.log(if_function)
      // if(if_function=2){
      //     var if_split=new Array();
      //     if_split= split.split("")
      //     if(if_split[4]===true){
      //         console.log(if_split[6]);
      //         if_function=1;
      //
      //     }
      //     else{ //false
      //         console.log(if_split[8]);
      //         if_function=0;
      //     }
      //     console.log(if_split);
      // }
      // else{
      var bracket_f_score =0;
      var bracket_b_score =0;


      if(arr.length===0){
          nan_num=2;

      }

      //=뒤에 나올 수 있는 배열 하나 더 만들기

      var after_arr= new Array()
      var before_arr= new Array()
      for (var ad = 0; arr.length>ad; ad++) {
          // if(isNaN(arr[ad])===false && arr[ad]!='+' && arr[ad]!='-' && arr[ad]!='*'&& arr[ad]!='/'
          //     && arr[ad]!='^' && arr[ad]!='(' && arr[ad]!=')' && arr[ad]!='' ){ //한글이 들어간 경우
          //     add.push(arr[ad]);
          // }
          if(arr[ad]==='('){
              bracket_f_score+=1;
              // add.push(arr[ad]);
              console.log(bracket_f_score)

          }
          if (arr[ad]===')'){
              bracket_b_score+=1;
              // add.push(arr[ad]);
              console.log(bracket_b_score)
          }

          if(isNaN(arr[ad])===false) { //숫자가 나오면
              exception_nan_num = 77; //77로 바뀌어서,! 연산자 없을 때의 식의 예외처리를 해주기 위함
          }

          if(arr[ad]==='='){
              nan_equal=2;
              break;
          }



          if (add.length === 0) {
              add.push(arr[ad]);
          }
          else {
              // if(arr[ad]==='='){ //=연산자를 계산할 때 필요한 함수
              //     before_arr = add
              //     add=[];
              // }
              // else {
                  // console.log(typeof (add[add.length-1]));
                  // console.log(isNaN(add[add.length-1])); // "2"일 때 string인데 false가 나옴, 따옴표 안에 값을 본다는 것
                  if (isNaN(add[add.length - 1]) === false && isNaN(arr[ad]) === false) { //string으로 되어 있으니 붙일 수 있었음...
                      add[add.length - 1] = Number(add[add.length - 1] + arr[ad]);
                      if (add[add.length - 1] > 1000000000000000 || add[add.length - 1] < -1000000000000000) {
                          exception1 = 2;
                          break;
                      }
                      console.log(add)
                  }
                  // -- ++ -+가 나오는 경우
                  // else if((add[add.length - 1] === '-' && arr[ad]==='-')){
                  //     exception2===2
                  // }
                  // |(add[add.length - 1] === '+' && arr[ad]==='+') ||(add[add.length - 1] === '-' && arr[ad]==='+')
                  else if (arr[ad] === '-' || arr[ad] === '+' || arr[ad] === '.') { //--붙은 경우는 계산이 불가능하다는 것 알려주기
                      if ((add[add.length - 1] === '-' && arr[ad] === '-' || add[add.length - 1] === '+' && arr[ad] === '+')) {
                          console.log('연산자 오류')
                          exception2 = 2;
                          break;
                      }
                      else {
                          console.log(arr[ad])
                          add.push(arr[ad])
                          console.log(add)
                      }
                  }
                  else if (isNaN(arr[ad]) === false && add[add.length - 1] === '.' && isNaN(add[add.length - 2]) === false) {
                      add[add.length - 2] = Number(add[add.length - 2] + add[add.length - 1] + arr[ad]);
                      add.pop();
                      console.log(add)
                  }
                  else if ((add[add.length - 1] === '-' && isNaN(arr[ad]) === false)) {//마이너스와 숫자가 붙어있다면- 음수화 만들기
                      add[add.length - 1] = Number(add[add.length - 1] + arr[ad]);
                      console.log(add)
                  }


                  //괄호를 제외한 연산자와 ) 이렇게 끝나는 경우
                  else if ((add[add.length - 1] != '(' && add[add.length - 1] != ')') && isNaN(add[add.length - 1]) === true && arr[ad] === ')') {
                      exception4 = 2
                      console.log(add)
                      break;

                  }
                  else if ((add[add.length - 1] != '(' && add[add.length - 1] != ')') && (arr[ad] != ')' && arr[ad] != '(') && isNaN(add[add.length - 1]) === true && isNaN(arr[ad]) === true) {
                      exception2 = 2 //전에 있거나 앞으로 올 것들 중 괄호가 없는 상황에서, 연산자끼리 붙으면 망망
                      console.log(add)
                      break;
                  }
                  //7(5)가 안되는 경우 : 숫자 뒤에 바로 (괄호가 오거나 )괄호뒤에 바로 숫자가 오면.
                  else if ((isNaN(add[add.length - 1]) === false && arr[ad] === '(') || (add[add.length - 1] === ')' && isNaN(arr[ad]) === false)) {
                      exception3 = 2
                      console.log(add)
                      break;
                  }
                  else {
                      add.push(arr[ad]);
                      console.log(add)

                  }
              }
          // }
      }

      // after_arr=add;
      // console.log(after_arr);
      // console.log(before_arr);

          // }

          // console.log(add)
          // console.log(add.length-1)
          // console.log(exception1)

      //equal 관련
      // var equal_position=new Array();
      // for (var equal = 0; add.length>equal; equal++){
      //     if(add[equal]==='='){
      //         equal_position=equal;
      //     }
      // }
      //
      // if(equal_position.length===1){
      //     if(equal_position[0]===add[add.length-1]){
      //         add.pop()
      //     }
      // }
      // else{
      //     exception_equal=2;
      // }



      // =을 앞뒤로 해서 식을 두가지로 보기
      // var after_arr= new Array()
      // var before_arr= new Array()
      // for (var number=0;add.length>number;number++ ){
      //     if(add[number]==='='){
      //         after_arr.push(add[number]);
      //     }
      //     else{
      //         before_arr.push(add[number]);
      //     }
      // }
      //
      // console.log(after_arr);
      // console.log(before_arr);







      //예외처리 및 실행
      if (add[0]==='*' || add[0]==='/' || add[0]==='+'||add[0]==='='){ //첫 시작 연산자
          alert("연산자로 시작할 수 없습니다.");

      }
      else if(nan_num===2){
          alert("값이 입력되지 않았습니다.")
      }
      else if(exception1===2){ //연산자끼리 붙어 있는 경우, 괄호 제외
          alert("계산할 수 있는 자릿수를 초과하셨습니다(15자리까지 가능).")

      }
      else if(exception2===2){ //연산자끼리 붙어 있는 경우, 괄호 제외
          alert("연산자끼리는 붙을 수 없습니다")
      }
      else if(exception3===2){ //연산자끼리 붙어 있는 경우, 괄호 제외
          alert("괄호와 숫자만으로 계산할 수 없습니다.")
      }
      else if(exception4===2){ //연산자끼리 붙어 있는 경우, 괄호 제외
          alert("괄호 안에 식은 연산자로 끝날 수 없습니다.")
      }
      //괄호의 짝이 안맞을 경우
      else if(bracket_f_score!=bracket_b_score){
          alert("괄호의 개수가 맞지 않습니다!")
      }
      //글자가 들어왔을 경우

      //마지막 글자가 괄호를 제외한 기호인경우
      else if((add[add.length-1]!='(' && add[add.length-1]!=')'&&add[add.length-1]!='=')&&isNaN(add[add.length-1])===true){
          alert("마지막에 기호가 올 수 없습니다.")
      }

      else if(exception_nan_num===2){
          alert("계산할 수 있는 연산자가 없습니다.")
      }
      else if(nan_equal===2){
          alert("=은 입력할 수 없는 문자열입니다.")
      }

      else{
          var stack_cal=formula(add);
          calculation(stack_cal);

          // if(integer===0){
          //     alert("계산할 수 있는 피연산자가 없습니다!")
          // }
          // else{
          //     calculation(stack_cal);
          // }
      }



  });



   //숫자가 하나도 없는 경우를 알기 위한 변수
   // var integer=0;
   function formula(add){
       var vs = new Array(); // 연산자들 비교하기 위한 배열
       var stack_cal = new Array(); //후위계산식 / [] 이렇게 만드는 것과 어떤 차이가 있을까?
       var rule ={
           "*" : 50,
           "/" : 40,
           "+" : 30,
           "-" : 30,
           "(" : 0 //0이어야 괄호 안에 값이 들어와도 다 괄호로 묶을 수 있으니까!
       }
       var i=0;
       while(i<add.length){ //후위표기식 만들기
           if(isNaN(add[i])){ //숫자가 아니라면
               if(vs.length===0){ //비교할 것이 없으면
                   vs.push(add[i]); //우선  push
               }

               else if(add[i]==='('){ //첫등장할 때는 바로 push할 필요가 있다.
                   vs.push(add[i]);
               }
               else if(add[i]===')'){ //닫는 괄호가 나타나면
                   //여는 괄호가 나타날때까지
                   while(1) {
                       var temp=vs.pop();
                       if(temp==='('){
                           break;
                       }
                       stack_cal.push(temp);
                   }
               }

               else{ // 연산자끼리 비교할 때
                   if(rule[vs[vs.length-1]]>=rule[add[i]]){ //기존에 있던 연산자가 크거나 같으면 pop
                       stack_cal.push(vs.pop());
                       vs.push(add[i]);
                       console.log(vs);
                   }
                   else{ //들어오는 연산자가 크면 push
                       vs.push(add[i]);
                   }
               }
           }
           else{ //숫자라면
               stack_cal.push(add[i]);
               console.log(stack_cal)
               // integer++;

           }
           i++
       }
       if (vs.length!=0){
           while(1){
               stack_cal.push(vs.pop()); //마지막으로 남아있는 연산자들 pop
               if (vs.length===0){
                   break;
               }
           }
       }
       console.log(stack_cal)
       return stack_cal

   }

   function  calculation(stack_cal){
       console.log(stack_cal)
       var variable=0
       var sum =0;
       var cal_sum;
       var sum_cal = new Array();
       while(stack_cal.length>variable){
           console.log(variable)
           if(isNaN(stack_cal[variable])){ //true인 상태, 즉 연산자가 들어온 경우
               if(stack_cal[variable-1]<0 && stack_cal[variable]==='-'){ //음수일 때 -가 들어오면
                   sum_cal[sum_cal.length-1]=Math.abs(stack_cal[variable-1]); //음수를 양수로 변환
                   stack_cal[variable-1]=Math.abs(stack_cal[variable-1]);
                   stack_cal[variable]='+';
                   console.log(sum_cal)
                   console.log(stack_cal)
                   variable=variable-1;
               }

               else if(sum_cal.length ===1){ // 7 + 만 있는 경우
                   console.log('hii')
                   if(stack_cal.length===2){
                       var num0=sum_cal.pop();
                       sum_cal.push(Number(stack_cal[variable]+num0));
                   }
               }
               else{
                   var num2=sum_cal.pop();
                   console.log(num2);
                   var num1=sum_cal.pop();
                   console.log(num1);
                   if(stack_cal[variable]==='+'){ //이렇게 일일이 하는 것이 아니라 계산해주는 함수도 있을까?
                       cal_sum=Number(num1)+Number(num2);
                       sum_cal.push(cal_sum);
                       console.log(sum_cal);
                   }
                   else if(stack_cal[variable]==='-'){
                       cal_sum=Number(num1)-Number(num2);
                       sum_cal.push(cal_sum);
                   }
                   else if(stack_cal[variable]==='*'){
                       cal_sum=Number(num1)*Number(num2);
                       sum_cal.push(cal_sum);
                       console.log(sum_cal);
                       console.log(sum_cal);
                   }
                   else if(stack_cal[variable]==='/'){
                       if(num1==='0' || num2 ==='0'){
                           alert("0을 나눌 수는 없습니다!")
                           break;
                       }
                       else{
                           cal_sum=Number(num1)/Number(num2);
                           sum_cal.push(cal_sum);
                           console.log(sum_cal);
                       }
                   }
                   else if(stack_cal[variable]==='%'){
                       cal_sum=Number(num1)%Number(num2);
                       sum_cal.push(cal_sum);
                       console.log(sum_cal);
                   }
                   // else if(stack_cal[variable]==='='){
                   //     sum_cal.push(cal_sum);
                   //
                   // }

               }
           }
           else{ //정수인 것
                if(stack_cal[variable-1]==='-' && stack_cal[variable]<0 ){
                   sum_cal[sum_cal.length-1]=Math.abs(stack_cal[variable]);
                   console.log(sum_cal);
               }
               else{
                    sum_cal.push(stack_cal[variable]);
                    console.log(sum_cal);
                }
           }
           variable++
       }
       var sum=0;
       if(sum_cal.length!=0){ //여러개가 남으면 다 합치기
           for(var sum_cal_variable=0; sum_cal_variable<sum_cal.length; sum_cal_variable++){
               sum+=Number(sum_cal[sum_cal_variable]);
               $('#result').val(sum)
               $('#Equation_arrangement').val($('#Equation').val())
               console.log(sum);
           }
       }
       else{
           sum=sum_cal[0]
           $('#result').val(sum) ;
           //$('#result').val() =sum_cal[0]  이게 안되는 이유는
           $('#Equation_arrangement').val($('#Equation').val())
           console.log(sum);
       }



   }



  $(document).on("click",'.init', function(value) {
      $('#Equation').val('') ;
      $('#result').val('') ;
      $('#Function_description').val('');
      $('#Equation_arrangement').val('');

  });

</script>
</head>

<body>
<!--??? 배경색 왜 적용이 안되는 것인지.,.,.-->
<div class="container background" style="background:#343d46; ">
    <div class="total box">
        <div class="row">
            <p class="explanation">함수 설명</p>
            <div class="col-11">
                <input type="text" id="Function_description" value="" style="width:100%; height:105px;" disabled/>
            </div>
        </div>
        <div class="row">
            <p class="explanation">수식 입력</p>
            <div class="col-11">
                <input type="text" id="Equation" value="" style="width:100%; height:35px;"/>
            </div>
        </div>
        <br>
        <div class="column_left">
            <button class="btn-sm btn-dark cal"  id="plus" value="+" >+</button>
            <button class="btn-sm btn-dark cal"  id="minus" value="-">-</button>
            <button class="btn-sm btn-dark cal" id="multiply"  value="*">*</button>
            <button class="btn-sm btn-dark cal" id="div" value="/">/</button>
            <button class="btn-sm btn-dark cal" id="Squared" value="^">^</button>
            <button class="btn-sm btn-dark cal" id="Remainder" value="%">%</button>
            <button class="btn-sm btn-dark cal" id="bracket_f"  value="(">(</button>
            <button class="btn-sm btn-dark cal" id="bracket_f"  value=")">)</button>
            <button class="btn-sm btn-dark function" id="sin" value="">SIN</button>
            <button class="btn-sm btn-dark function" id="cos" value="">COS</button>
            <button class="btn-sm btn-dark function" id="tan" value="">TAN</button>
            <button class="btn-sm btn-dark function" id="asin" value="">ASIN</button>
            <button class="btn-sm btn-dark function" id="acos" value="">ACOS</button>
            <button class="btn-sm btn-dark function" id="atan" value="">ATAN</button>
            <button class="btn-sm btn-dark function" id="abs" value="">ABS</button>
            <button class="btn-sm btn-dark function" id="root" value="">Root</button>
            <button class="btn-sm btn-dark function" id="round" value="">Round</button>
            <button class="btn-sm btn-dark function" id="log" value="">LOG</button>
            <button class="btn-sm btn-dark function" id="if" value="IF[,,]">IF</button>
            <button class="btn-sm btn-dark function" id="if" value="">!</button>
            <button class="btn-sm btn-dark init"  value="c">Clear</button>
            <br>
            <p class="explanation Equation">계산할 수식</p>
            <input type="text" id="Equation_arrangement" value="" style="width:98%; height:35px;" disabled/>
            <p class="explanation result">결과값</p>
            <input type="text" id="result" value="" style="width:98%; height:35px;" disabled/>
        </div>
        <div class="column_right">
            <input type="text" calss="function_explanation" style="height: 210px; width:190px; border:2px;"disabled/>
            <br>
            <button class="btn btn-secondary equals"  value="=" >=</button>
        </div>

    </div>
</div>


</body>
</html>